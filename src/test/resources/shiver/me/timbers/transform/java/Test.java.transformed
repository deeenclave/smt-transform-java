['package'][packageDeclaration][compilationUnit]package[compilationUnit][packageDeclaration]['package'] [Identifier][qualifiedName]shiver[qualifiedName][Identifier].[Identifier]me[Identifier].[Identifier]timbers[Identifier].[Identifier]transform[Identifier].[Identifier]java[Identifier];

['import'][importDeclaration]import[importDeclaration]['import'] [Identifier][qualifiedName]java[qualifiedName][Identifier].[Identifier]io[Identifier].[Identifier]Serializable[Identifier];

[JAVA_DOC]/**
 * This class has been created to provide some example source for Transforming.
 *
 * @author Karl Bennett
 */[JAVA_DOC]
[annotation][classOrInterfaceModifier][typeDeclaration]@[typeDeclaration][classOrInterfaceModifier][annotation][Identifier][qualifiedName][annotationName]SuppressWarnings[annotationName][qualifiedName][Identifier]([StringLiteral][literal][primary][expression][elementValue]"ALL"[elementValue][expression][primary][literal][StringLiteral])
['public'][classOrInterfaceModifier]public[classOrInterfaceModifier]['public'] ['abstract'][classOrInterfaceModifier]abstract[classOrInterfaceModifier]['abstract'] ['class'][classDeclaration]class[classDeclaration]['class'] [classDefinition][Identifier]Test[Identifier][classDefinition] ['extends']extends['extends'] [Identifier][classOrInterfaceType][type]Object[type][classOrInterfaceType][Identifier] ['implements']implements['implements'] [Identifier][classOrInterfaceType][type][typeList]Serializable[typeList][type][classOrInterfaceType][Identifier] [classBody]{[classBody]

    [COMMENT]/*
    * This is a multi line comment.
    */[COMMENT]
    ['private'][classOrInterfaceModifier][modifier][classBodyDeclaration]private[classBodyDeclaration][modifier][classOrInterfaceModifier]['private'] ['final'][classOrInterfaceModifier][modifier]final[modifier][classOrInterfaceModifier]['final'] ['transient'][modifier]transient[modifier]['transient'] [Identifier][classOrInterfaceType][type][fieldDeclaration][memberDeclaration]String[memberDeclaration][fieldDeclaration][type][classOrInterfaceType][Identifier] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]test[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier];
    ['protected'][classOrInterfaceModifier][modifier][classBodyDeclaration]protected[classBodyDeclaration][modifier][classOrInterfaceModifier]['protected'] ['volatile'][modifier]volatile[modifier]['volatile'] ['byte'][primitiveType][type][fieldDeclaration][memberDeclaration]byte[memberDeclaration][fieldDeclaration][type][primitiveType]['byte'] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]aByte[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier];
    ['protected'][classOrInterfaceModifier][modifier][classBodyDeclaration]protected[classBodyDeclaration][modifier][classOrInterfaceModifier]['protected'] ['short'][primitiveType][type][fieldDeclaration][memberDeclaration]short[memberDeclaration][fieldDeclaration][type][primitiveType]['short'] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]aShort[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier];
    ['protected'][classOrInterfaceModifier][modifier][classBodyDeclaration]protected[classBodyDeclaration][modifier][classOrInterfaceModifier]['protected'] ['int'][primitiveType][type][fieldDeclaration][memberDeclaration]int[memberDeclaration][fieldDeclaration][type][primitiveType]['int'] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]anInt[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier];
    ['protected'][classOrInterfaceModifier][modifier][classBodyDeclaration]protected[classBodyDeclaration][modifier][classOrInterfaceModifier]['protected'] ['long'][primitiveType][type][fieldDeclaration][memberDeclaration]long[memberDeclaration][fieldDeclaration][type][primitiveType]['long'] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]aLong[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier];
    ['protected'][classOrInterfaceModifier][modifier][classBodyDeclaration]protected[classBodyDeclaration][modifier][classOrInterfaceModifier]['protected'] ['float'][primitiveType][type][fieldDeclaration][memberDeclaration]float[memberDeclaration][fieldDeclaration][type][primitiveType]['float'] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]aFloat[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier];
    ['protected'][classOrInterfaceModifier][modifier][classBodyDeclaration]protected[classBodyDeclaration][modifier][classOrInterfaceModifier]['protected'] ['double'][primitiveType][type][fieldDeclaration][memberDeclaration]double[memberDeclaration][fieldDeclaration][type][primitiveType]['double'] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]aDouble[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier];

    ['enum'][enumDeclaration][memberDeclaration][classBodyDeclaration]enum[classBodyDeclaration][memberDeclaration][enumDeclaration]['enum'] [Identifier]ENUM[Identifier] {
        [Identifier][enumConstant][enumConstants]ONE[enumConstants][enumConstant][Identifier],
        [Identifier][enumConstant]TWO[enumConstant][Identifier]
    }

    ['public'][classOrInterfaceModifier][modifier][classBodyDeclaration]public[classBodyDeclaration][modifier][classOrInterfaceModifier]['public'] [Identifier][constructorDeclaration][memberDeclaration]Test[memberDeclaration][constructorDeclaration][Identifier][formalParameters]([formalParameters][Identifier][classOrInterfaceType][type][formalParameter][formalParameterList]String[formalParameterList][formalParameter][type][classOrInterfaceType][Identifier] [Identifier][variableDeclaratorId]test[variableDeclaratorId][Identifier]) [block][constructorBody]{[constructorBody][block]
        ['super'][primary][expression][expression][statementExpression][statement][blockStatement]super[blockStatement][statement][statementExpression][expression][expression][primary]['super']();

        ['assert'][statement][blockStatement]assert[blockStatement][statement]['assert'] ['null'][literal][primary][expression][expression]null[expression][expression][primary][literal]['null'] != [Identifier][primary][expression]test[expression][primary][Identifier];

        ['this'][primary][expression][expression][expression][statementExpression][statement][blockStatement]this[blockStatement][statement][statementExpression][expression][expression][expression][primary]['this'].[Identifier]test[Identifier] = [Identifier][primary][expression]test[expression][primary][Identifier];
    }

    ['public'][classOrInterfaceModifier][modifier][classBodyDeclaration]public[classBodyDeclaration][modifier][classOrInterfaceModifier]['public'] [Identifier][classOrInterfaceType][type][methodDeclaration][memberDeclaration]String[memberDeclaration][methodDeclaration][type][classOrInterfaceType][Identifier] [methodDefinition][Identifier]getTest[Identifier][methodDefinition][formalParameters]([formalParameters]) [methodDefinition]['throws']throws['throws'][methodDefinition] [Identifier][qualifiedName][qualifiedNameList]RuntimeException[qualifiedNameList][qualifiedName][Identifier] [block][methodBody]{[methodBody][block]

        ['return'][statement][blockStatement]return[blockStatement][statement]['return'] [Identifier][primary][expression]test[expression][primary][Identifier];
    }

    ['public'][classOrInterfaceModifier][modifier][classBodyDeclaration]public[classBodyDeclaration][modifier][classOrInterfaceModifier]['public'] ['boolean'][primitiveType][type][methodDeclaration][memberDeclaration]boolean[memberDeclaration][methodDeclaration][type][primitiveType]['boolean'] [methodDefinition][Identifier]append[Identifier][methodDefinition][formalParameters]([formalParameters]['char'][primitiveType][type][formalParameter][formalParameterList]char[formalParameterList][formalParameter][type][primitiveType]['char'] [Identifier][variableDeclaratorId]number[variableDeclaratorId][Identifier]) [block][methodBody]{[methodBody][block]

        ['try'][statement][blockStatement]try[blockStatement][statement]['try'] [block]{[block]

            [LINE_COMMENT]// This is a comment.[LINE_COMMENT]
            ['return'][statement][blockStatement]return[blockStatement][statement]['return'] [Identifier][primary][expression][expression][expression]test[expression][expression][expression][primary][Identifier] + [Identifier][primary][expression]number[expression][primary][Identifier] == [StringLiteral][literal][primary][expression]"2"[expression][primary][literal][StringLiteral];

        } ['catch'][catchClause]catch[catchClause]['catch'] ([Identifier][qualifiedName][catchType]Exception[catchType][qualifiedName][Identifier] [Identifier]e[Identifier]) [block]{[block]

            ['throw'][statement][blockStatement]throw[blockStatement][statement]['throw'] ['new'][expression]new[expression]['new'] [Identifier][createdName][creator]RuntimeException[creator][createdName][Identifier][arguments][classCreatorRest]([classCreatorRest][arguments][Identifier][primary][expression][expressionList]e[expressionList][expression][primary][Identifier]);

        } ['finally'][finallyBlock]finally[finallyBlock]['finally'] [block]{[block]

            [Identifier][primary][expression][expression][expression][expression][statementExpression][statement][blockStatement]System[blockStatement][statement][statementExpression][expression][expression][expression][expression][primary][Identifier].[Identifier]out[Identifier].[Identifier]println[Identifier]([StringLiteral][literal][primary][expression][expressionList]"done."[expressionList][expression][primary][literal][StringLiteral]);
        }
    }

    ['public'][classOrInterfaceModifier][modifier][classBodyDeclaration]public[classBodyDeclaration][modifier][classOrInterfaceModifier]['public'] ['static'][classOrInterfaceModifier][modifier]static[modifier][classOrInterfaceModifier]['static'] ['int'][primitiveType][type][methodDeclaration][memberDeclaration]int[memberDeclaration][methodDeclaration][type][primitiveType]['int'] [methodDefinition][Identifier]increment[Identifier][methodDefinition][formalParameters]([formalParameters]['int'][primitiveType][type][formalParameter][formalParameterList]int[formalParameterList][formalParameter][type][primitiveType]['int'] [Identifier][variableDeclaratorId]number[variableDeclaratorId][Identifier]) [block][methodBody]{[methodBody][block]

        ['final'][variableModifier][localVariableDeclaration][localVariableDeclarationStatement][blockStatement]final[blockStatement][localVariableDeclarationStatement][localVariableDeclaration][variableModifier]['final'] [Identifier][classOrInterfaceType][type]Object[type][classOrInterfaceType][Identifier] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]object[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier] = ['new'][expression][variableInitializer]new[variableInitializer][expression]['new'] [Identifier][createdName][creator]Object[creator][createdName][Identifier][arguments][classCreatorRest]([classCreatorRest][arguments]);

        ['for'][statement][blockStatement]for[blockStatement][statement]['for'] (['int'][primitiveType][type][localVariableDeclaration][forInit][forControl]int[forControl][forInit][localVariableDeclaration][type][primitiveType]['int'] [Identifier][variableDeclaratorId][variableDeclarator][variableDeclarators]i[variableDeclarators][variableDeclarator][variableDeclaratorId][Identifier] = [IntegerLiteral][literal][primary][expression][variableInitializer]0[variableInitializer][expression][primary][literal][IntegerLiteral]; [Identifier][primary][expression][expression]i[expression][expression][primary][Identifier] < [IntegerLiteral][literal][primary][expression]10[expression][primary][literal][IntegerLiteral]; [Identifier][primary][expression][expression][expressionList][forUpdate]i[forUpdate][expressionList][expression][expression][primary][Identifier]++) [block][statement]{[statement][block]

            [Identifier][primary][expression][expression][statementExpression][statement][blockStatement]number[blockStatement][statement][statementExpression][expression][expression][primary][Identifier]++;

            ['if'][statement][blockStatement]if[blockStatement][statement]['if'] [parExpression]([parExpression][Identifier][primary][expression][expression]object[expression][expression][primary][Identifier] ['instanceof']instanceof['instanceof'] [Identifier][classOrInterfaceType][type]Double[type][classOrInterfaceType][Identifier]) ['continue'][statement]continue[statement]['continue'];
            ['else']else['else'] [block][statement]{[statement][block]

                [Identifier][primary][expression][expression][statementExpression][statement][blockStatement]number[blockStatement][statement][statementExpression][expression][expression][primary][Identifier]--;
            }

            ['switch'][statement][blockStatement]switch[blockStatement][statement]['switch'] [parExpression]([parExpression][Identifier][primary][expression]i[expression][primary][Identifier]) {
                ['case'][switchLabel][switchBlockStatementGroup]case[switchBlockStatementGroup][switchLabel]['case'] [IntegerLiteral][literal][primary][expression][constantExpression]9[constantExpression][expression][primary][literal][IntegerLiteral]:
                    ['break'][statement][blockStatement]break[blockStatement][statement]['break'];
                ['default'][switchLabel][switchBlockStatementGroup]default[switchBlockStatementGroup][switchLabel]['default']:
                    [Identifier][primary][expression][expression][statementExpression][statement][blockStatement]number[blockStatement][statement][statementExpression][expression][expression][primary][Identifier] = [IntegerLiteral][literal][primary][expression]0[expression][primary][literal][IntegerLiteral];
            }
        }

        ['do'][statement][blockStatement]do[blockStatement][statement]['do'] [block][statement]{[statement][block]

        } ['while']while['while'] [parExpression]([parExpression][expression][expression]-[expression][expression][IntegerLiteral][literal][primary][expression]1[expression][primary][literal][IntegerLiteral] > [Identifier][primary][expression]number[expression][primary][Identifier]);

        ['return'][statement][blockStatement]return[blockStatement][statement]['return'] [Identifier][primary][expression]number[expression][primary][Identifier];
    }

    ['public'][classOrInterfaceModifier][modifier][classBodyDeclaration]public[classBodyDeclaration][modifier][classOrInterfaceModifier]['public'] ['synchronized'][modifier]synchronized[modifier]['synchronized'] ['native'][modifier]native[modifier]['native'] [methodDefinition]['void'][methodDeclaration][memberDeclaration]void[memberDeclaration][methodDeclaration]['void'][methodDefinition] [methodDefinition][Identifier]method[Identifier][methodDefinition][formalParameters]([formalParameters]);
}
